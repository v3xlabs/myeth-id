name: Deploy

on:
  push:
    branches:
      - master

jobs:
  build-container:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file: [Dockerfile]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # selecting a toolchain either by action or manual `rustup` calls should happen
      # before the plugin, as the cache uses the current rustc version as its cache key
      - run: rustup toolchain install stable --profile minimal

      - uses: Swatinem/rust-cache@v2

      - run: |
          rustup target add x86_64-unknown-linux-musl
          cargo build --target=x86_64-unknown-linux-musl --release

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false

      - name: Set tag suffix
        id: suffix
        run: |
          if [[ "${{ matrix.file }}" == *.* ]]; then
            echo "::set-output name=suffix:::$(echo "${{ matrix.file }}" | cut -d'.' -f1)"
          else
            echo "::set-output name=suffix::"
          fi

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}
          flavor: |
            latest=auto
          tags: |
            type=raw,value=${{ github.sha }},suffix=${{ steps.suffix.outputs.suffix }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build, tag, and push image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.file }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
